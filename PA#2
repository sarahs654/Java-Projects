/**
 * @HernandezSkinner002PA2
 * @authors Rafael Hernandez, Sarah Skinner
 * @version 1.0 2022/03/24 09:12
 * 
 * PROGRAM PURPOSE: Create a program that tells an insured how much will be paid out if there is an earthquake.
 * The payout will be based off of the richter scale and insured value of the home. 
 */

 //IMPORT statements to be used within the program
 import java.util.Scanner;//class that will be used to capture user input
 import java.util.Calendar;//class that will be used to print current date / time

 public class HernandezSkinner002PA2
 {//BEGIN public class HernandezSkinner002PA2
    
    private static String message = " ";//variable initialization for the String message
    private static String coverage = " ";//variable initialization for the String coverage   
    private static double payout = 0.0;//variable initialization for the double payout
    private static double deductible = 0.0;//variable initialization for the double deductible
    private static boolean repeat = false;//variable initialization for boolean repeat
    private static Scanner input = new Scanner(System.in);//created a new scanner object input
    
    public static void main(String[] args)
    {//BEGIN main method
      
      String insured = " ";//variable initialization for the String insured
      double homeInsVal = 0.0;//variable initialization for the double homeInsVal
      double richter = 0.0;//variable initialization for the double richter 
      char cont = ' ';//variable initialization for the char cont
      char correct = ' ';//variable initialization for the char correct
      char another = ' ';//variable initialization for the char another
      Calendar dateTime = Calendar.getInstance();//created a new calendar object dateTime
      
      System.out.printf("%nMUTUALLY ACCIDENTAL, INC."); //BEGIN PROMPT 1
      System.out.printf("%n%nDo you want an analysis of earthquake coverage"
                          + " for your property? Enter 'Y' or 'N':  ");
      cont = input.next().charAt(0); //END PROMPT 1
      
      if(Character.toUpperCase(cont) == 'N') 
      { //BEGIN if cont == 'N'
        printThankYou();
      } // END if cont == 'N'
      
      while(Character.toUpperCase(cont) == 'Y')
      { //BEGIN while cont == 'Y'
        insured = promptInsuredName(); //prompt for insured's name + store it in insured var
        
        coverage = String.format("%n%nPAYOUT FOR EARTHQUAKE " //initialize coverage var
                                   + "DAMAGE"
                                   + "%n%nHomeowner: %S"
                                   + "%n%nDate: %tD"
                                   + "%nTime: %tr%n", insured, dateTime, dateTime);
        
        do { //BEGIN do while another == 'Y'
          do { //BEGIN do while correct == 'N'
            homeInsVal = promptHomeInsVal();
            richter = promptRichter();
            testRichter(richter, homeInsVal);
            
            
            System.out.printf("%nYour Name: %S"
                                + "%nHome's Insured Value $%,20.2f"
                                + "%nRichter Scale: %,2.2f", insured, homeInsVal, richter);
            System.out.printf("%nIs this information correct? 'Y' or 'N':  ");
            correct = input.next().charAt(0);
            
          } while(Character.toUpperCase(correct) == 'N');
          
          addToCoverage(richter);
          
          System.out.printf("%nDo you have another property? Enter 'Y' or 'N':  ");
          another = input.next().charAt(0);
          
        } while(Character.toUpperCase(another) == 'Y');
        printCoverage(richter); //PRINTING COVERAGE
        
        System.out.printf("%nMUTUALLY ACCIDENTAL, INC.");
        System.out.printf("%nEnter 'Y' to continue with another homeowner or 'N' to exit:  "); //asking to restart loop with new homeowner
        cont =  input.next().charAt(0); 
        
      } //END while cont == 'Y'
      printThankYou();
      
    }//END main method

    public static String promptInsuredName()
    {//BEGIN promptInsuredName 
      System.out.printf("%nMUTUALLY ACCIDENTAL, INC.%nEarthquake coverage Analyzer%n%n"
                          + "Please enter your name: ");
      return input.next();
    }//END promptInsuredName

    public static double promptHomeInsVal()
    {//BEGIN promptHomeInsVal
      double homeInsVal;
      do
      {//BEGIN do-while
        repeat = false; 
        System.out.printf("%nMUTUALLY ACCIDENTAL, INC.%nEarthquake Coverage Analyzer%n%n"
                            +"Please enter the insured value of your home: "); 
        validateNumber(input.hasNextDouble());
        homeInsVal = input.nextDouble();
        input.nextLine(); //clear buffer
         
        if (homeInsVal < 0)
        {
          System.out.printf("%nThe insured value of your home cannot be less than or equal to 0.");
          repeat = true;
        }
      }while(repeat == true);//END do, BEGIN while
      return homeInsVal;
      
    }//END promptHomeInsVal
    
    public static double promptRichter()
    {//BEGIN promptRichter
      double richter;
      do 
      {//BEGIN do-while
        repeat = false; 
        System.out.printf("%n     9.0+         Total destruction."
                            + "%n     8.0          Most structures fell."
                            + "%n     7.0          Many buildings destroyed."
                            + "%n     6.0          Many buildings considerably damaged, some collapsed."
                            + "%n     4.5          Damage to poorly constructed buildings."
                            + "%n     3.5          Felt by many people, no destruction."
                            + "%n     0            Generally not felt by people.");
        System.out.printf("%nPlease enter the Richter scale value for the earthquake:  ");
        validateNumber(input.hasNextDouble());
        richter = input.nextDouble();
        input.nextLine(); //clear buffer
        
        if (richter < 0) 
        { //BEGIN if richter
          System.out.printf("%nInvalid! Richter cannot be negative. Please re-enter%n");
          repeat = true;
        } //END if richter
       
      }while(repeat == true);//END do, BEGIN while
      return richter;
    }//END promptRichter
      
    public static void validateNumber(boolean repeat)
    {//BEGIN validateNumber
      repeat = repeat;
      if(repeat != true)
      {//BEGIN if repeat != true
        input.nextLine(); //clear buffer
        System.out.printf("Warning: You entered an invalid integer or floating-point value.");
      }//END if repeat != true
    }//END validateNumber
    
    public static void testRichter(double richter, double homeInsVal)
    {//BEGIN testRichter
      if (richter >= 9.0) {//set payout, deductible, and message if richter >= 9.0
        payout = homeInsVal * .90;
        deductible = homeInsVal * .10;
        message = "Total destruction.";
     } else if (richter >= 8.0) {//set payout, deductible, and message if 9.0 > richter >= 8.0
       payout = homeInsVal * .80;
       deductible = homeInsVal * .20;
       message = "Most structures fell.";
     } else if (richter >= 7.0) {//set payout, deductible, and message if 8.0 > richter >= 7.0
       payout = homeInsVal * .70;
       deductible = homeInsVal * .30;
       message = "Many buildings destroyed.";
     } else if (richter >= 6.0) {//set payout, deductible, and message if 7.0 > richter >= 6.0
       payout = homeInsVal * .60;
       deductible = homeInsVal * .40;
       message = "Many buildings considerably damaged, some collapsed.";
     } else if (richter >= 4.5) {//set payout, deductible, and message if 6.0 > richter >= 4.5
       payout = homeInsVal * .50;
       deductible = homeInsVal * .50;
       message = "Damage to poorly constructed buildings.";
     } else if (richter >= 3.5) {//set payout, deductible, and message if 4.5 > richter >= 3.5
       payout = 0;
       deductible = 0;
       message = "Felt by many people, no destruction.";
     } else if (richter >= 0) {//set payout, deductible, and message if 3.5 > richter >= 0
       payout = 0;
       deductible = 0;
       message = "Generally not felt by people.";
     }//end if-else-if test
    }//END testRichter
    
    public static void addToCoverage(double richter) 
    {//BEGIN addToCoverage
      if (richter >= 0) 
      {//BEGIN if richter >= 0
        coverage += String.format("%n%-52s %4s $%,20.2f"
                                    + "%nDeductible %47s %,20.2f"
                                    + "%n%46s TOTAL %4s $%,20.2f%n",
                                  message, " ", payout, " ", deductible, " ",
                                  " ", payout + deductible);
      }//END if richter >= 0
    }//END addToCoverage
    
    public static void printCoverage(double richter)
    {//BEGIN printCoverage
      if (richter >= 0) 
        System.out.printf(coverage);
      
    }//END printCoverage
    
    public static void printThankYou()
    {//BEGIN printThankYou
      System.out.printf("%nThank you for using the Earthquake Coverage Analyzer.");
    }//END printThankYou
 }//END public class HernandezSkinner002PA2